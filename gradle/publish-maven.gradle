/**
* Adds custom pom generation.
*/

apply plugin: 'maven'
apply plugin: 'signing'

signing {
    sign configurations.archives
}

task generatePom ( dependsOn: jar ) {
    ext.destFile = file ( "$buildDir/libs/${project.name}-${project.version}.pom" )
    
    doLast {
        def localDeployer = install.repositories.mavenInstaller

        configure(localDeployer) {
            
            pom.groupId = project.group
            pom.artifactId = archivesBaseName
            pom.version = version
            
            pom.writeTo(destFile)
		}
    }
}

install {
	repositories.mavenInstaller {
		customizePom(pom, project.name, project.description)
	}
}

uploadArchives {
    repositories.mavenDeployer {
    
    	beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
    	
        customizePom(pom, project.name, project.description)
        
        // for maven central
        // snapshot: https://oss.sonatype.org/content/repositories/snapshots
        // releases: https://oss.sonatype.org/service/local/staging/deploy/maven2
        
        //repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        //    authentication(userName: ossrhUsername, password: ossrhPassword)
        //}
        
        repository(url: "file:///${rootProject.projectDir}/upload")
    }
}

def customizePom(pom, projectName, projectDescription) {
	pom.whenConfigured { generatedPom ->
		// eliminate test-scoped dependencies (no need in maven central poms)
		generatedPom.dependencies.removeAll { dep ->
			dep.scope == "test"
		}

		// sort to make pom dependencies order consistent to ease comparison of older poms
		generatedPom.dependencies = generatedPom.dependencies.sort { dep ->
			"$dep.scope:$dep.groupId:$dep.artifactId"
		}

		// add all items necessary for maven central publication
		generatedPom.project {
			name = projectName
			description = projectDescription
			organization {
				name = "Rainer Schnitker"
				url = "https://github.com/Schnitker/LogManager"
			}
	        scm {
	          	connection 'scm:git:git://github.com/Schnitker/LogManager'
	          	developerConnection 'scm:git:git://github.com/Schnitker/LogManager'
	          	url 'https://github.com/Schnitker/LogManager'
	        }
	        licenses {
	          	license {
	            	name 'The Apache License, Version 2.0'
	            	url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
	            	distribution "repo"
	          	}
	        }
			developers {
				developer {
					id = "rs"
					name = "Rainer Schnitker"
				}
			}
		}
	}
}
