/**
* Adds custom pom generation.
*/

apply plugin: 'maven-publish'

// signing for maven central
signing {
	required { gradle.taskGraph.hasTask("publish") }
    sign configurations.archives
}

publishing { // new maven
    repositories {
        maven {
            url "file:///${rootProject.projectDir}/upload"
        }
    }
    publications {
        mavenJava( MavenPublication ) {
            from components.java

            pom {
                afterEvaluate {
					name = project.description
					description = project.description
				}
				url = "https://github.com/Schnitker/LogManager"

				organization {
					name = "Rainer Schnitker"
					url = "https://github.com/Schnitker"
				}
		        scm {
		          	connection = 'scm:git:git://github.com/Schnitker/LogManager'
		          	developerConnection = 'scm:git:git://github.com/Schnitker/LogManager'
		          	url = 'https://github.com/Schnitker/LogManager'
		        }  
		        licenses {
		          	license {
		            	name = 'The Apache License, Version 2.0'
		            	url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
		          	}
		        }
				developers {
					developer {
						id = "rs"
						name = "Rainer Schnitker"
					}
				} 
            }
        }
    }            

    generatePomFileForMavenJavaPublication {
        destination = file( "$buildDir/libs/${project.name}-${project.version}.pom" )
    }

    generateMetadataFileForMavenJavaPublication {
        outputFile = file( "$buildDir/libs/${project.name}-${project.version}.module" )
    }
}

// task for artifacts/archives reference
task generatePom( dependsOn: generatePomFileForMavenJavaPublication ) {
    group = "Build"
    description = "Build maven pom artefact."
    ext.destFile = generatePomFileForMavenJavaPublication.destination
}

// task for artifacts/archives reference
task generateModule( dependsOn: generateMetadataFileForMavenJavaPublication ) {
    group = "Build"
    description = "Build gradle module artefact."
    ext.destFile = generateMetadataFileForMavenJavaPublication.outputFile
}

assemble.dependsOn generatePom
assemble.dependsOn generateModule