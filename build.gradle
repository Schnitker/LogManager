// ~~~ GLOBAL ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

allprojects {

    group = 'com.github.schnitker.logmanager'
    
    repositories { 
        mavenCentral()
    }

    version = '1.0.2.1'
}

defaultTasks 'assemble'

// ~~~ Modules ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

subprojects { subproject ->

	apply plugin: 'java'
	apply from:   "${rootProject.projectDir}/gradle/eclipse-project-utf8.gradle"
	apply from:   "${rootProject.projectDir}/gradle/eclipse-project-libsort.gradle"

	// non-sample projects should use maven upload
	if (! subproject.name.startsWith('sample')) {
		apply from:   "${rootProject.projectDir}/gradle/publish-maven.gradle"
	}
	
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileJava.options.encoding = 'utf-8'

    if ( JavaVersion.current().isJava8Compatible() ) {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
          	//options.addBooleanOption('html5', true);
        }
    }

    jar {
        manifest.attributes["Implementation-Vendor"] = 'Schnitker.com'
        manifest.attributes["Implementation-Title"] = subproject.name
        manifest.attributes["Implementation-Version"] = subproject.version
    }

	java {
	    withSourcesJar()
   	    withJavadocJar()
	}

    test {
        testLogging {
            exceptionFormat = 'full'
        }
    }
       
    artifacts {
        archives sourcesJar, javadocJar
    }
}

// ~~~ Root ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

def getEclipseFilter() {
	return '1.0-projectRelativePath-matches-true-true-(logmgr-.*)'
}

configure(rootProject) {
	apply from:   'gradle/eclipse-project-filter.gradle'
}
